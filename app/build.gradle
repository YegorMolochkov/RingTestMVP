apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compile_sdk_version
    buildToolsVersion rootProject.build_tools_version
    defaultConfig {
        applicationId "com.molochkov.ringtestmvp"
        minSdkVersion rootProject.min_sdk_version
        targetSdkVersion rootProject.target_sdk_version
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "BASE_URL", BASE_URL
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

ext {
    // Support
    contraint_layout_version = '1.1.3'

    // Testing
    test_runner_version = '1.1.0'
    junit_version = '4.12'
    mockito_version = '2.0.0'

    // Dagger
    dagger_version = '2.11'
    glassfish_version = '10.0-b28'

    // Rx
    rx_kotlin_version = '2.1.0'
    rx_java_version = '2.1.2'
    rx_android_version = '2.0.2'

    // Logging
    timber_version = '4.5.1'

    // Design
    material_version = '1.0.0'

    //Glide
    glide_version = '4.7.1'

    //Network
    okhttp_version = '3.10.0'
    retrofit_version = '2.4.0'
    gson_version = '2.8.5'
    gson_converter_version = '2.4.0'
    logging_interceptor_verion = '3.4.1'
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin lang
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Support
    implementation "androidx.appcompat:appcompat:$support_library_version"
    implementation "androidx.constraintlayout:constraintlayout:$contraint_layout_version"

    // Testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_version"

    // Dagger
    implementation "org.glassfish:javax.annotation:$glassfish_version"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Rx
    implementation "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"
    implementation "io.reactivex.rxjava2:rxjava:$rx_java_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rx_android_version"

    // Logging
    implementation "com.jakewharton.timber:timber:$timber_version"

    //Design
    implementation "com.google.android.material:material:$material_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    //Network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_verion"
    implementation "com.google.code.gson:gson:$gson_version"

}